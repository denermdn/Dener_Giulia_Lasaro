----------- Área de testes ----------------

DROP TABLE IF EXISTS TB_USER CASCADE;
DROP TABLE IF EXISTS TB_CENR CASCADE;
DROP TABLE IF EXISTS TB_ALVO CASCADE;
DROP TABLE IF EXISTS TB_CANH CASCADE;
DROP TABLE IF EXISTS TB_FASE CASCADE;
DROP TABLE IF EXISTS TB_GBRT CASCADE;
DROP TABLE IF EXISTS TB_USER_FASE CASCADE;
-------- Criação das tabelas -------------
CREATE TABLE TB_USER(
    USER_ID INT NOT NULL  CHECK (USER_ID > 0),
    USER_NAME VARCHAR(255) NOT NULL,
    USER_LOGIN VARCHAR(20) NOT NULL UNIQUE,
    USER_SENHA VARCHAR(20) NOT NULL,
    USER_NASC DATE,
    USER_PONT_TOTAL INT DEFAULT 0,
    USER_ULTM_FASE INT DEFAULT 0,
    PRIMARY KEY (USER_ID)
);

CREATE TABLE TB_CENR(
    CENR_ID INT NOT NULL  CHECK (CENR_ID > 0),
    CENR_GVDD FLOAT CHECK (CENR_GVDD > 0),
    PRIMARY KEY (CENR_ID)
);

CREATE TABLE TB_ALVO(
    ALVO_ID INT NOT NULL CHECK (ALVO_ID > 0),
    ALVO_POSX INT,
    ALVO_POSY INT,
    ALVO_RAIO FLOAT CHECK (ALVO_RAIO > 0),
    PRIMARY KEY (ALVO_ID)
);

CREATE TABLE TB_CANH(
    CANH_ID INT NOT NULL CHECK (CANH_ID > 0),
    CANH_POSX INT,
    CANH_POSY INT,
    CANH_ANGL FLOAT,
    PRIMARY KEY (CANH_ID)
);

CREATE TABLE TB_FASE(
    FASE_ID INT NOT NULL  CHECK (FASE_ID > 0),
    FASE_DIFC INT NOT NULL,
    FASE_PONT INT DEFAULT 0,
    FASE_CENR INT NOT NULL,
    FASE_CANH INT NOT NULL,
    FASE_ALVO INT NOT NULL,
    PRIMARY KEY (FASE_ID),
    FOREIGN KEY (FASE_CENR) REFERENCES TB_CENR,
    FOREIGN KEY (FASE_CANH) REFERENCES TB_CANH,
    FOREIGN KEY (FASE_ALVO) REFERENCES TB_ALVO
);

CREATE TABLE TB_GBRT(
    GBRT_ID INT NOT NULL CHECK (GBRT_ID > 0),
    GBRT_VEL FLOAT NOT NULL,
    GBRT_ANGL FLOAT NOT NULL,
    GBRT_TMP FLOAT CHECK (GBRT_TMP > 0),
    GBRT_DISTX FLOAT,
    GBRT_ALT FLOAT,
    PRIMARY KEY (GBRT_ID),
    FOREIGN KEY (GBRT_ID) REFERENCES TB_FASE
);


CREATE TABLE TB_USER_FASE (
    USER_FASE_ID INT NOT NULL CHECK (USER_FASE_ID > 0),
    USER_ID INT NOT NULL CHECK (USER_ID > 0),
    FASE_ID INT NOT NULL CHECK (FASE_ID > 0),
    FASE_USER_PONT INT DEFAULT 0,
    PRIMARY KEY (USER_FASE_ID),
    FOREIGN KEY (USER_ID) REFERENCES TB_USER,
    FOREIGN KEY (FASE_ID) REFERENCES TB_FASE
);